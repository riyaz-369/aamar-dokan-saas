import type { FromSchema } from 'json-schema-to-ts';
import * as schemas from './schemas';

export type B2CPaymentUsingPostBodyParam = FromSchema<typeof schemas.B2CPaymentUsingPost.body>;
export type B2CPaymentUsingPostMetadataParam = FromSchema<typeof schemas.B2CPaymentUsingPost.metadata>;
export type B2CPaymentUsingPostResponse200 = FromSchema<typeof schemas.B2CPaymentUsingPost.response['200']>;
export type CapturePaymentUsingPostMetadataParam = FromSchema<typeof schemas.CapturePaymentUsingPost.metadata>;
export type CapturePaymentUsingPostResponse200 = FromSchema<typeof schemas.CapturePaymentUsingPost.response['200']>;
export type CreatePaymentUsingPostBodyParam = FromSchema<typeof schemas.CreatePaymentUsingPost.body>;
export type CreatePaymentUsingPostMetadataParam = FromSchema<typeof schemas.CreatePaymentUsingPost.metadata>;
export type CreatePaymentUsingPostResponse200 = FromSchema<typeof schemas.CreatePaymentUsingPost.response['200']>;
export type ExecutePaymentUsingPostMetadataParam = FromSchema<typeof schemas.ExecutePaymentUsingPost.metadata>;
export type ExecutePaymentUsingPostResponse200 = FromSchema<typeof schemas.ExecutePaymentUsingPost.response['200']>;
export type GetTokenUsingPostBodyParam = FromSchema<typeof schemas.GetTokenUsingPost.body>;
export type GetTokenUsingPostMetadataParam = FromSchema<typeof schemas.GetTokenUsingPost.metadata>;
export type GetTokenUsingPostResponse200 = FromSchema<typeof schemas.GetTokenUsingPost.response['200']>;
export type IntraAccountTransferUsingPostBodyParam = FromSchema<typeof schemas.IntraAccountTransferUsingPost.body>;
export type IntraAccountTransferUsingPostMetadataParam = FromSchema<typeof schemas.IntraAccountTransferUsingPost.metadata>;
export type IntraAccountTransferUsingPostResponse200 = FromSchema<typeof schemas.IntraAccountTransferUsingPost.response['200']>;
export type PostCheckoutPaymentRefundBodyParam = FromSchema<typeof schemas.PostCheckoutPaymentRefund.body>;
export type PostCheckoutPaymentRefundMetadataParam = FromSchema<typeof schemas.PostCheckoutPaymentRefund.metadata>;
export type PostCheckoutPaymentRefundResponse200 = FromSchema<typeof schemas.PostCheckoutPaymentRefund.response['200']>;
export type QueryOrganizationBalanceUsingGetMetadataParam = FromSchema<typeof schemas.QueryOrganizationBalanceUsingGet.metadata>;
export type QueryOrganizationBalanceUsingGetResponse200 = FromSchema<typeof schemas.QueryOrganizationBalanceUsingGet.response['200']>;
export type QueryPaymentUsingGetMetadataParam = FromSchema<typeof schemas.QueryPaymentUsingGet.metadata>;
export type QueryPaymentUsingGetResponse200 = FromSchema<typeof schemas.QueryPaymentUsingGet.response['200']>;
export type RefreshTokenUsingPostBodyParam = FromSchema<typeof schemas.RefreshTokenUsingPost.body>;
export type RefreshTokenUsingPostMetadataParam = FromSchema<typeof schemas.RefreshTokenUsingPost.metadata>;
export type RefreshTokenUsingPostResponse200 = FromSchema<typeof schemas.RefreshTokenUsingPost.response['200']>;
export type SearchTransactionUsingGetMetadataParam = FromSchema<typeof schemas.SearchTransactionUsingGet.metadata>;
export type SearchTransactionUsingGetResponse200 = FromSchema<typeof schemas.SearchTransactionUsingGet.response['200']>;
export type VoidPaymentUsingPostMetadataParam = FromSchema<typeof schemas.VoidPaymentUsingPost.metadata>;
export type VoidPaymentUsingPostResponse200 = FromSchema<typeof schemas.VoidPaymentUsingPost.response['200']>;
